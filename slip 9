Q1. Write a Program to Implement Depth First Search using Python.
def dls(graph, node, goal, depth):
    if node == goal:
        return True
    if depth <= 0:
        return False
    for neighbor in graph[node]:
        if dls(graph, neighbor, goal, depth - 1):
            return True
    return False

def iddfs(graph, start, goal, max_depth):
    for depth in range(max_depth):
        if dls(graph, start, goal, depth):
            return True
    return False

# Example usage
graph = {
    'A': ['B', 'C'],
    'B': ['D', 'E'],
    'C': ['F', 'G'],
    'D': ['H', 'I'],
    'E': [],
    'F': ['K'],
    'G': [],
    'H': [],
    'I': [],
    'K': []
}

print(iddfs(graph, 'A', 'G', 4))  # This should return True if goal 'G' is found

Q2. Write a program to implement Iterative Deepening DFS algorithm. [ Goal Node =G] [20
def dls(graph, node, goal, depth):
    if node == goal:
        return True
    if depth <= 0:
        return False
    for neighbor in graph[node]:
        if dls(graph, neighbor, goal, depth - 1):
            return True
    return False

def iddfs(graph, start, goal, max_depth):
    for depth in range(max_depth):
        if dls(graph, start, goal, depth):
            return True
    return False

# Example usage
graph = {
    'A': ['B', 'C'],
    'B': ['D', 'E'],
    'C': ['F', 'G'],
    'D': ['H', 'I'],
    'E': [],
    'F': ['K'],
    'G': [],
    'H': [],
    'I': [],
    'K': []
}

goal = 'G'
max_depth = 4

found = iddfs(graph, 'A', goal, max_depth)
print(f"Goal '{goal}' found: {found}")


         OR
Q2. Develop Healthcare Appointment Bot (simple chatbot that helps patients book appointments or find clinic information.)    
import time

# Simulate a database of doctors and clinic information
doctors = {
    "Dr. Alice": {"specialty": "Cardiology", "available_times": ["10:00 AM", "12:00 PM", "2:00 PM"]},
    "Dr. Bob": {"specialty": "Orthopedics", "available_times": ["9:00 AM", "11:00 AM", "3:00 PM"]},
    "Dr. Charlie": {"specialty": "Pediatrics", "available_times": ["9:30 AM", "1:30 PM", "4:00 PM"]}
}

clinic_info = {
    "name": "HealthFirst Clinic",
    "address": "123 Wellness Blvd, City, Country",
    "phone": "+1234567890",
    "hours": "Mon-Fri: 9:00 AM - 6:00 PM, Sat: 9:00 AM - 1:00 PM, Sun: Closed"
}

# Function to display clinic information
def show_clinic_info():
    print("\nClinic Information:")
    print(f"Name: {clinic_info['name']}")
    print(f"Address: {clinic_info['address']}")
    print(f"Phone: {clinic_info['phone']}")
    print(f"Hours: {clinic_info['hours']}")

# Function to list available doctors
def show_doctors():
    print("\nAvailable Doctors:")
    for doctor, details in doctors.items():
        print(f"{doctor} - Specialty: {details['specialty']}")
        print(f"Available Times: {', '.join(details['available_times'])}")
        print("-" * 30)

# Function to book an appointment
def book_appointment():
    # Ask for patient details
    name = input("Enter your name: ")
    phone = input("Enter your phone number: ")

    # Display available doctors and let the user choose one
    show_doctors()
    doctor_choice = input("Choose your doctor by name (e.g., Dr. Alice): ")

    if doctor_choice not in doctors:
        print("Sorry, we couldn't find that doctor. Please try again.")
        return

    # Display the available times for the chosen doctor
    print(f"\nAvailable times for {doctor_choice}: {', '.join(doctors[doctor_choice]['available_times'])}")
    time_choice = input("Choose a time (e.g., 10:00 AM): ")

    if time_choice not in doctors[doctor_choice]["available_times"]:
        print("Sorry, that time is not available. Please try again.")
        return

    # Confirm the appointment
    print(f"\nBooking appointment for {name} with {doctor_choice} at {time_choice}...")
    time.sleep(1)  # Simulate booking delay
    print(f"Appointment successfully booked for {name} with {doctor_choice} at {time_choice}.\n")
    
    # Option to show clinic info
    show_clinic_info()

# Main function to interact with the user
def healthcare_bot():
    print("Welcome to the HealthFirst Clinic Appointment Bot!\n")
    
    while True:
        print("How can I assist you today?")
        print("1. Book an appointment")
        print("2. Get clinic information")
        print("3. Exit")
        
        choice = input("\nPlease enter a number (1-3): ")
        
        if choice == "1":
            book_appointment()
        elif choice == "2":
            show_clinic_info()
        elif choice == "3":
            print("Thank you for visiting! Have a healthy day!")
            break
        else:
            print("Invalid choice. Please enter a valid option (1-3).")

# Start the chatbot
if __name__ == "__main__":
    healthcare_bot()
